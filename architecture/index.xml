<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Architectures on Avito Android</title><link>https://avito-tech.github.io/avito-android/architecture/</link><description>Recent content in Architectures on Avito Android</description><generator>Hugo -- gohugo.io</generator><language>ru-ru</language><atom:link href="https://avito-tech.github.io/avito-android/architecture/index.xml" rel="self" type="application/rss+xml"/><item><title>Dependency Injection with Dagger</title><link>https://avito-tech.github.io/avito-android/architecture/dagger/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://avito-tech.github.io/avito-android/architecture/dagger/</guid><description>Dagger Материалы Обязательно прочесть Документация Тредик на гитхабе с tips &amp;amp; tricks для kotlin Рекомендую к изучению Видео от одного из авторов Dagger Ron Shapiro, о том, как правильно его готовить Немного устаревшая статья про правильное приготовление dagger ⚠️ Нельзя постигнуть даггер, не смотря какой код он генерирует! Как правильно работать с Dagger Поддерживаемость прежде всего. Граф зависимостей делай маскимально простой и понятный Application Component имеет минимальный скоуп - содержит не более необходимого чилсла зависимостей Если зависимость может быть не глобальной, оне должа быть в скоупе экрана, а не приложения Меньше мокай в instrumentation-тестах Provides → Binds Используй Binds вместо Provides по-возможности всегда</description></item><item><title>Modules</title><link>https://avito-tech.github.io/avito-android/architecture/modules/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://avito-tech.github.io/avito-android/architecture/modules/</guid><description>TBD: http://links.k.avito.ru/cfxFKKAg</description></item></channel></rss>