<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Performances on Avito Android</title><link>https://avito-tech.github.io/avito-android/performance/</link><description>Recent content in Performances on Avito Android</description><generator>Hugo -- gohugo.io</generator><language>ru-ru</language><atom:link href="https://avito-tech.github.io/avito-android/performance/index.xml" rel="self" type="application/rss+xml"/><item><title>Реалтайм-аналитика</title><link>https://avito-tech.github.io/avito-android/performance/analytics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://avito-tech.github.io/avito-android/performance/analytics/</guid><description>Замеры перформанса экрана Что умеем замерять Пользовательские метрики время от тача до начала инициализации экрана (предынициализация) время от тача до окончания отрисовки каждого из потоков данных экрана Этапы работы экрана время инициализации экрана (ScreenInitTracker) время DI экрана (ScreenDiInjectTracker) время загрузки данных по сети и с диска (наследники ContentLoadingTracker) время обработки данных, например конвертации сетевых моделей в презентационные (ViewDataPreparingTracker) - не всегда используется, потому что не везде есть время отрисовки (с момента посылки команды на отрисовку до того как соответсвующий Runnable отработал на main thread) длительность инициализации и DI компонентов (сабмодулей) Отправляем метрики в statsd для realtime-аналитики и clickstream для AB-тестирования и детального анализа.</description></item></channel></rss>