<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tests on Avito Android</title><link>https://avito-tech.github.io/avito-android/test/</link><description>Recent content in Tests on Avito Android</description><generator>Hugo -- gohugo.io</generator><language>ru-ru</language><atom:link href="https://avito-tech.github.io/avito-android/test/index.xml" rel="self" type="application/rss+xml"/><item><title>Dynamic config</title><link>https://avito-tech.github.io/avito-android/test/dynamicconfig/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://avito-tech.github.io/avito-android/test/dynamicconfig/</guid><description>Запуск тестов в CI с кастомными параметрами В Teamcity есть конфигурация instrumentationDynamic для запуска тестов со специфическим набором требований.
Запускайте и вам будет предложено выбрать:
Ветку для запуска Версии API Фильтр для выбора тестов (package prefix), можно задать пакет [+ имя класса [+ имя тестового метода ]] Количество запусков. Полезно для отладки нестабильных тестов</description></item><item><title>Manual</title><link>https://avito-tech.github.io/avito-android/test/manual/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://avito-tech.github.io/avito-android/test/manual/</guid><description>Ручное тестирование Обрати внимание на Типы Сборок
Где взять сборку? QApps</description></item><item><title>Test Management System</title><link>https://avito-tech.github.io/avito-android/test/testmanagementsystem/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://avito-tech.github.io/avito-android/test/testmanagementsystem/</guid><description>Test Management System (TMS) В Авито используется собственная TMS, которой нет в open-source.
Внутренняя документация
Метаданные @FeatureId(IntArray) - указать принадлежность к глобальному дереву фич приложения @TagId(IntArray) - принадлежность к облаку тегов теста (у каждой команды свое)
&amp;ndash; deprecated &amp;ndash;
@CaseId(Int) - id теста в TMS, не актуально после введения test case in code @Features(vararg String) - строковое представление фич, не используется в синхронизации
Kind Для того чтобы визуализировать тестовую пирамиду, указывается тип см.</description></item><item><title>Testing support</title><link>https://avito-tech.github.io/avito-android/test/support/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://avito-tech.github.io/avito-android/test/support/</guid><description>Поддержка Если нужна помощь по работе с автотестами на проекте, обращайтесь в slack #android-autotesting
Также можно завести баг в проект MBS с компонентами Android, TestFramework</description></item><item><title>Troubleshooting UI Tests</title><link>https://avito-tech.github.io/avito-android/test/troubleshootingui/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://avito-tech.github.io/avito-android/test/troubleshootingui/</guid><description>Troubleshooting Известные баги тестового фреймворка Jira Filter Автофокус камеры зависает на 22 API (https://issuetracker.google.com/issues/139438163) Как понять почему упал тест? Teamcity Для начала можно посмотреть в TeamCity, открыв тест можно увидеть краткую выжимку о причинах падения
Есть краткая причина падения не информативна - это повод написать нам.
Report Viewer Используем отчеты в Report Viewer, которые содержат:
Видео с эмулятора Только для упавших тестов Только для API 23+. На меньших версиях технологии не позволяют записывать надежно Скриншоты: до и после каждого шага, во время падения Трейс ошибки: цепочка событий которая привела к ошибке Logcat для упавших тестов HTTP запросы и ответы во время шагов Логи запросов к ресурсам: Resource Manager, AB/test, Integration API, phones Логи действий тестового фреймворка Report Viewer локально При запуске теста локально, ссылка на Report Viewer тоже формируется и доступна в logcat, ищите по фильтру: rv.</description></item><item><title>Unit tests</title><link>https://avito-tech.github.io/avito-android/test/unittesting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://avito-tech.github.io/avito-android/test/unittesting/</guid><description>Unit tests How to write good tests (mockito)
Assertions Рекомендуется использовать assertThat() вместо assertEquals() и т.п.
Мотивация Типизация assertEquals(&amp;quot;id&amp;quot;, 1L) - падает только в рантайме assertThat(&amp;quot;id&amp;quot;, 'is'(1L)) - проверка при компиляции
Читаемость assert &amp;ldquo;equals 3 x&amp;rdquo; assert &amp;ldquo;x is 3&amp;rdquo; - естественный порядок
Комбинирование условий either(s).or(not(t)) each(s) И т.п. особенно с кастомными матчерами.
Сообщения об ошибках assertTrue(response.contains(&amp;#34;color&amp;#34;) || response.contains(&amp;#34;colour&amp;#34;)) // java.lang.AssertionError // at org.junit.Assert.fail(Assert.java) // at org.junit.Assert.assertTrue(...) // и т.п., никаких подробностей assertThat(response, anyOf(containsString(&amp;#34;color&amp;#34;),containsString(&amp;#34;colour&amp;#34;))) // java.</description></item><item><title>Введение</title><link>https://avito-tech.github.io/avito-android/test/run/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://avito-tech.github.io/avito-android/test/run/</guid><description>Запуск тестов IDE Обрати внимание на кастомные конфигурации
Robolectric Просто запускаем стрелками Run напротив имени тестового класса или метода.
Важно чтобы в настройках запуск был делегирован Gradle:
Preferences &amp;gt; Build, Exceution, Deployment &amp;gt; Build Tools &amp;gt; Gradle
AS 3.6&amp;#43; Build and run using: Gradle Run tests using: Gradle AS 3.5 Delegate IDE build/run actions to Gradle Run tests using: Gradle Test Runner Instrumentation Known issues Не работает запуск конкретного метода в тесте, только всего класса (#127662898) CI Кастомный запуск</description></item><item><title>Скриншотные тесты</title><link>https://avito-tech.github.io/avito-android/test/screenshottesting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://avito-tech.github.io/avito-android/test/screenshottesting/</guid><description>Скриншотные тесты Цель Скриншотные тесты позволяют вовремя отследить изменения цветов / стилей и предотвратить нежелательные изменения в UI
Что именно покрывают скриншотные тесты? Сейчас скриншотные тесты распространяются только на компоненты из дизайн системы
Ограничения В данный момент скриншотные тесты заливаются в git без использования git-lfs. Разумеется, если скриншотов в истории git будет слишком много, то вес репозитория будет слишком большой и работа с ним в целом замедлится. По рассчетам еще не скоро это станет проблемой, договорились что стоит поднимать вопрос после планки в 50 mb</description></item><item><title>Тестовый фреймворк</title><link>https://avito-tech.github.io/avito-android/test/testframework/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://avito-tech.github.io/avito-android/test/testframework/</guid><description>Тестовый фреймворк PageObject PageObject - Martin Fowler
Interaction Context TODO: move to advanced section
Внутреннее состояние PO. Используем чтобы отразить иерархию View, унаследовать проверки.
ViewElement PageObject над View. Составляющие:
InteractionContext - знания про родительский элемент, окружение Actions - действия с элементом Checks - проверки состояния Создание Для создания используем фабричную функцию element:
val submitButton: ViewElement = element(withId(R.id.submit_button)) ViewMatcher будет учитывать родительский PageObject, унаследует его matcher.
Вложенные ViewElement Все PageObject могут быть вложенными, отражать реальную иерархию:</description></item></channel></rss>